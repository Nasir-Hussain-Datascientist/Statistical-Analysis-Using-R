getwd()
setwd)("D:\datascience\Statistical Analysis Using R")
setwd("D:\datascience\Statistical Analysis Using R")
setwd("D:/datascience/Statistical Analysis Using R")
getwd()
knitr::opts_chunk$set(echo = TRUE)
# Load necessary libraries
library(readxl)  # For reading Excel files
library(dplyr)   # For data manipulation
library(knitr)   # For displaying tables
# Read data from the Excel file
brand1 <- read_excel("MA_assignment_data.xls", sheet = "brand1")
brand2 <- read_excel("MA_assignment_data.xls", sheet = "brand2")
# Summary statistics for Coca-Cola (brand1) excluding 'week' column
summary_brand1 <- brand1 %>%
select(-week) %>%  # Exclude the 'week' column
summarise(across(where(is.numeric), list(
Min = ~min(. , na.rm = TRUE),
Max = ~max(. , na.rm = TRUE),
Mean = ~mean(. , na.rm = TRUE),
Median = ~median(. , na.rm = TRUE),
SD = ~sd(. , na.rm = TRUE)
)))
# Transpose the summary table for Coca-Cola
summary_brand1_transposed <- t(summary_brand1)
# Summary statistics for Pepsi-Cola (brand2) excluding 'week' column
summary_brand2 <- brand2 %>%
select(-week) %>%  # Exclude the 'week' column
summarise(across(where(is.numeric), list(
Min = ~min(. , na.rm = TRUE),
Max = ~max(. , na.rm = TRUE),
Mean = ~mean(. , na.rm = TRUE),
Median = ~median(. , na.rm = TRUE),
SD = ~sd(. , na.rm = TRUE)
)))
# Transpose the summary table for Pepsi-Cola
summary_brand2_transposed <- t(summary_brand2)
# Display results in Markdown format
cat("\n### Summary Statistics for Coca-Cola (Brand 1):\n")
kable(summary_brand1_transposed)
cat("\n### Summary Statistics for Pepsi-Cola (Brand 2):\n")
kable(summary_brand2_transposed)
# Load necessary library
library(tidyverse)
# Assuming the dataset has already been loaded as brand2 data frame
# Add 1 only to variables that contain zero values for feature, display, tv, digital, ooh, and magazine
brand2 <- brand2 %>%
mutate(
log_sales = log(sales.brand2),
log_feature = ifelse(feature.brand2 == 0, log(feature.brand2 + 1), log(feature.brand2)),
log_display = ifelse(display.brand2 == 0, log(display.brand2 + 1), log(display.brand2)),
log_assortment = log(assortment.brand2),
log_price = log(price.brand2),
log_tv = ifelse(tv.brand2 == 0, log(tv.brand2 + 1), log(tv.brand2)),
log_digital = ifelse(digital.brand2 == 0, log(digital.brand2 + 1), log(digital.brand2)),
log_ooh = ifelse(ooh.brand2 == 0, log(ooh.brand2 + 1), log(ooh.brand2)),
log_magazine = ifelse(magazine.brand2 == 0, log(magazine.brand2 + 1), log(magazine.brand2))
)
# Estimate the regression model
model <- lm(log_sales ~ log_feature + log_display + log_assortment + log_price +
log_tv + log_digital + log_ooh + log_magazine, data = brand2)
# Display the summary of the model
summary(model)
install.packages("tinytex")
tinytex::install_tinytex()
tinytex::check_installed()
library(tinytex)
knitr::opts_chunk$set(echo = TRUE)
# Load necessary libraries
library(readxl)  # For reading Excel files
library(dplyr)   # For data manipulation
library(knitr)   # For displaying tables
# Read data from the Excel file
brand1 <- read_excel("MA_assignment_data.xls", sheet = "brand1")
brand2 <- read_excel("MA_assignment_data.xls", sheet = "brand2")
# Summary statistics for Coca-Cola (brand1) excluding 'week' column
summary_brand1 <- brand1 %>%
select(-week) %>%  # Exclude the 'week' column
summarise(across(where(is.numeric), list(
Min = ~min(. , na.rm = TRUE),
Max = ~max(. , na.rm = TRUE),
Mean = ~mean(. , na.rm = TRUE),
Median = ~median(. , na.rm = TRUE),
SD = ~sd(. , na.rm = TRUE)
)))
# Transpose the summary table for Coca-Cola
summary_brand1_transposed <- t(summary_brand1)
# Summary statistics for Pepsi-Cola (brand2) excluding 'week' column
summary_brand2 <- brand2 %>%
select(-week) %>%  # Exclude the 'week' column
summarise(across(where(is.numeric), list(
Min = ~min(. , na.rm = TRUE),
Max = ~max(. , na.rm = TRUE),
Mean = ~mean(. , na.rm = TRUE),
Median = ~median(. , na.rm = TRUE),
SD = ~sd(. , na.rm = TRUE)
)))
# Transpose the summary table for Pepsi-Cola
summary_brand2_transposed <- t(summary_brand2)
# Display results in Markdown format
cat("\n### Summary Statistics for Coca-Cola (Brand 1):\n")
kable(summary_brand1_transposed)
cat("\n### Summary Statistics for Pepsi-Cola (Brand 2):\n")
kable(summary_brand2_transposed)
# Load necessary library
library(tidyverse)
# Assuming the dataset has already been loaded as brand2 data frame
# Add 1 only to variables that contain zero values for feature, display, tv, digital, ooh, and magazine
brand2 <- brand2 %>%
mutate(
log_sales = log(sales.brand2),
log_feature = ifelse(feature.brand2 == 0, log(feature.brand2 + 1), log(feature.brand2)),
log_display = ifelse(display.brand2 == 0, log(display.brand2 + 1), log(display.brand2)),
log_assortment = log(assortment.brand2),
log_price = log(price.brand2),
log_tv = ifelse(tv.brand2 == 0, log(tv.brand2 + 1), log(tv.brand2)),
log_digital = ifelse(digital.brand2 == 0, log(digital.brand2 + 1), log(digital.brand2)),
log_ooh = ifelse(ooh.brand2 == 0, log(ooh.brand2 + 1), log(ooh.brand2)),
log_magazine = ifelse(magazine.brand2 == 0, log(magazine.brand2 + 1), log(magazine.brand2))
)
# Estimate the regression model
model <- lm(log_sales ~ log_feature + log_display + log_assortment + log_price +
log_tv + log_digital + log_ooh + log_magazine, data = brand2)
# Display the summary of the model
summary(model)
knitr::opts_chunk$set(echo = TRUE)
# Load necessary libraries
library(readxl)  # For reading Excel files
library(dplyr)   # For data manipulation
library(knitr)   # For displaying tables
# Read data from the Excel file
brand1 <- read_excel("MA_assignment_data.xls", sheet = "brand1")
brand2 <- read_excel("MA_assignment_data.xls", sheet = "brand2")
# Summary statistics for Coca-Cola (brand1) excluding 'week' column
summary_brand1 <- brand1 %>%
select(-week) %>%  # Exclude the 'week' column
summarise(across(where(is.numeric), list(
Min = ~min(. , na.rm = TRUE),
Max = ~max(. , na.rm = TRUE),
Mean = ~mean(. , na.rm = TRUE),
Median = ~median(. , na.rm = TRUE),
SD = ~sd(. , na.rm = TRUE)
)))
# Transpose the summary table for Coca-Cola
summary_brand1_transposed <- t(summary_brand1)
# Summary statistics for Pepsi-Cola (brand2) excluding 'week' column
summary_brand2 <- brand2 %>%
select(-week) %>%  # Exclude the 'week' column
summarise(across(where(is.numeric), list(
Min = ~min(. , na.rm = TRUE),
Max = ~max(. , na.rm = TRUE),
Mean = ~mean(. , na.rm = TRUE),
Median = ~median(. , na.rm = TRUE),
SD = ~sd(. , na.rm = TRUE)
)))
# Transpose the summary table for Pepsi-Cola
summary_brand2_transposed <- t(summary_brand2)
# Display results in Markdown format
cat("\n### Summary Statistics for Coca-Cola (Brand 1):\n")
kable(summary_brand1_transposed)
cat("\n### Summary Statistics for Pepsi-Cola (Brand 2):\n")
kable(summary_brand2_transposed)
# Load necessary library
library(tidyverse)
# Assuming the dataset has already been loaded as brand2 data frame
# Add 1 only to variables that contain zero values for feature, display, tv, digital, ooh, and magazine
brand2 <- brand2 %>%
mutate(
log_sales = log(sales.brand2),
log_feature = ifelse(feature.brand2 == 0, log(feature.brand2 + 1), log(feature.brand2)),
log_display = ifelse(display.brand2 == 0, log(display.brand2 + 1), log(display.brand2)),
log_assortment = log(assortment.brand2),
log_price = log(price.brand2),
log_tv = ifelse(tv.brand2 == 0, log(tv.brand2 + 1), log(tv.brand2)),
log_digital = ifelse(digital.brand2 == 0, log(digital.brand2 + 1), log(digital.brand2)),
log_ooh = ifelse(ooh.brand2 == 0, log(ooh.brand2 + 1), log(ooh.brand2)),
log_magazine = ifelse(magazine.brand2 == 0, log(magazine.brand2 + 1), log(magazine.brand2))
)
# Estimate the regression model
model <- lm(log_sales ~ log_feature + log_display + log_assortment + log_price +
log_tv + log_digital + log_ooh + log_magazine, data = brand2)
# Display the summary of the model
summary(model)
library(ggplot2)
ggplot(brand2, aes(x = log_feature, y = log_sales)) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Feature Support vs Sales (Log-Log Model)", x = "Log(Feature Support)", y = "Log(Sales)")
# Load necessary libraries
library(tidyverse)
# Transform data for log-log regression
brand2 <- brand2 %>%
mutate(
log_sales = log(sales.brand2),
log_feature = ifelse(feature.brand2 == 0, log(feature.brand2 + 1), log(feature.brand2)),
log_display = ifelse(display.brand2 == 0, log(display.brand2 + 1), log(display.brand2)),
log_assortment = log(assortment.brand2),  # No +1 needed
log_price = log(price.brand2),  # No +1 needed
log_tv = ifelse(tv.brand2 == 0, log(tv.brand2 + 1), log(tv.brand2)),
log_digital = ifelse(digital.brand2 == 0, log(digital.brand2 + 1), log(digital.brand2)),
log_ooh = ifelse(ooh.brand2 == 0, log(ooh.brand2 + 1), log(ooh.brand2)),
log_magazine = ifelse(magazine.brand2 == 0, log(magazine.brand2 + 1), log(magazine.brand2))
)
# Estimate the log-log regression model
model <- lm(log_sales ~ log_feature + log_display + log_assortment + log_price +
log_tv + log_digital + log_ooh + log_magazine, data = brand2)
# Display regression summary
summary(model)
# Load library for formatted tables
library(stargazer)
install.packages("stargazer")
# Load library for formatted tables
library(stargazer)
# Generate a formatted regression table
stargazer(model, type = "text", title = "Log-Log Regression Results for Pepsi Sales")
# Load library for formatted tables
library(stargazer)
# Generate a formatted regression table
stargazer(model, type = "text", title = "Log-Log Regression Results for Pepsi Sales")
